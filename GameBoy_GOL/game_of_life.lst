                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.2 #14228 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module game_of_life
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _memcpy
                                     13 	.globl _rand
                                     14 	.globl _initrand
                                     15 	.globl _get_bkg_tile_xy
                                     16 	.globl _set_bkg_tiles
                                     17 	.globl _set_bkg_data
                                     18 	.globl _GOL_4by4
                                     19 ;--------------------------------------------------------
                                     20 ; special function registers
                                     21 ;--------------------------------------------------------
                                     22 ;--------------------------------------------------------
                                     23 ; ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area _DATA
                                     26 ;--------------------------------------------------------
                                     27 ; ram data
                                     28 ;--------------------------------------------------------
                                     29 	.area _INITIALIZED
      000000                         30 _GOL_4by4::
      000000                         31 	.ds 224
                                     32 ;--------------------------------------------------------
                                     33 ; absolute external ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area _DABS (ABS)
                                     36 ;--------------------------------------------------------
                                     37 ; global & static initialisations
                                     38 ;--------------------------------------------------------
                                     39 	.area _HOME
                                     40 	.area _GSINIT
                                     41 	.area _GSFINAL
                                     42 	.area _GSINIT
                                     43 ;--------------------------------------------------------
                                     44 ; Home
                                     45 ;--------------------------------------------------------
                                     46 	.area _HOME
                                     47 	.area _HOME
                                     48 ;--------------------------------------------------------
                                     49 ; code
                                     50 ;--------------------------------------------------------
                                     51 	.area _CODE
                                     52 ;game_of_life.c:17: void main(){
                                     53 ;	---------------------------------
                                     54 ; Function main
                                     55 ; ---------------------------------
      000000                         56 _main::
      000000 21 27 FD         [12]   57 	ld	hl, #-729
      000003 39               [ 8]   58 	add	hl, sp
      000004 F9               [ 8]   59 	ld	sp, hl
                                     60 ;game_of_life.c:20: initrand(123);
      000005 11 7B 00         [12]   61 	ld	de, #0x007b
      000008 D5               [16]   62 	push	de
      000009 CDr00r00         [24]   63 	call	_initrand
      00000C E1               [12]   64 	pop	hl
                                     65 ;game_of_life.c:22: set_bkg_data(0, 14, GOL_4by4);
      00000D 11r00r00         [12]   66 	ld	de, #_GOL_4by4
      000010 D5               [16]   67 	push	de
      000011 21 00 0E         [12]   68 	ld	hl, #0xe00
      000014 E5               [16]   69 	push	hl
      000015 CDr00r00         [24]   70 	call	_set_bkg_data
      000018 E8 04            [16]   71 	add	sp, #4
                                     72 ;game_of_life.c:48: for (int i = 0; i < ARRAY_SIZE; i++) {
      00001A 01 00 00         [12]   73 	ld	bc, #0x0000
      00001D                         74 00134$:
      00001D 79               [ 4]   75 	ld	a, c
      00001E D6 68            [ 8]   76 	sub	a, #0x68
      000020 78               [ 4]   77 	ld	a, b
      000021 17               [ 4]   78 	rla
      000022 3F               [ 4]   79 	ccf
      000023 1F               [ 4]   80 	rra
      000024 DE 81            [ 8]   81 	sbc	a, #0x81
      000026 30 23            [12]   82 	jr	NC, 00101$
                                     83 ;game_of_life.c:50: unsigned int r = (rand() % 2) * 13;
      000028 C5               [16]   84 	push	bc
      000029 CDr00r00         [24]   85 	call	_rand
      00002C 7B               [ 4]   86 	ld	a, e
      00002D C1               [12]   87 	pop	bc
      00002E E6 01            [ 8]   88 	and	a, #0x01
      000030 5F               [ 4]   89 	ld	e, a
      000031 87               [ 4]   90 	add	a, a
      000032 83               [ 4]   91 	add	a, e
      000033 87               [ 4]   92 	add	a, a
      000034 87               [ 4]   93 	add	a, a
      000035 83               [ 4]   94 	add	a, e
      000036 21 D8 02         [12]   95 	ld	hl, #728
      000039 39               [ 8]   96 	add	hl, sp
      00003A 77               [ 8]   97 	ld	(hl), a
                                     98 ;game_of_life.c:51: GOL_tiles_test[i] = r;
      00003B 21 00 00         [12]   99 	ld	hl, #0
      00003E 39               [ 8]  100 	add	hl, sp
      00003F 09               [ 8]  101 	add	hl, bc
      000040 5D               [ 4]  102 	ld	e, l
      000041 54               [ 4]  103 	ld	d, h
      000042 21 D8 02         [12]  104 	ld	hl, #728
      000045 39               [ 8]  105 	add	hl, sp
      000046 7E               [ 8]  106 	ld	a, (hl)
      000047 12               [ 8]  107 	ld	(de), a
                                    108 ;game_of_life.c:48: for (int i = 0; i < ARRAY_SIZE; i++) {
      000048 03               [ 8]  109 	inc	bc
      000049 18 D2            [12]  110 	jr	00134$
      00004B                        111 00101$:
                                    112 ;game_of_life.c:56: set_bkg_tiles(0, 0, 20, 18, GOL_tiles_test);
      00004B 21 00 00         [12]  113 	ld	hl, #0
      00004E 39               [ 8]  114 	add	hl, sp
      00004F E5               [16]  115 	push	hl
      000050 21 14 12         [12]  116 	ld	hl, #0x1214
      000053 E5               [16]  117 	push	hl
      000054 AF               [ 4]  118 	xor	a, a
      000055 0F               [ 4]  119 	rrca
      000056 F5               [16]  120 	push	af
      000057 CDr00r00         [24]  121 	call	_set_bkg_tiles
      00005A E8 06            [16]  122 	add	sp, #6
                                    123 ;game_of_life.c:58: SHOW_BKG;
      00005C F0r00            [12]  124 	ldh	a, (_LCDC_REG + 0)
      00005E F6 01            [ 8]  125 	or	a, #0x01
      000060 E0r00            [12]  126 	ldh	(_LCDC_REG + 0), a
                                    127 ;game_of_life.c:59: DISPLAY_ON;
      000062 F0r00            [12]  128 	ldh	a, (_LCDC_REG + 0)
      000064 F6 80            [ 8]  129 	or	a, #0x80
      000066 E0r00            [12]  130 	ldh	(_LCDC_REG + 0), a
                                    131 ;game_of_life.c:61: while(1){
      000068                        132 00131$:
                                    133 ;game_of_life.c:64: memcpy(GOL_tiles_test_copy, GOL_tiles_test, sizeof(GOL_tiles_test));
      000068 11 68 01         [12]  134 	ld	de, #0x0168
      00006B D5               [16]  135 	push	de
      00006C 21 02 00         [12]  136 	ld	hl, #2
      00006F 39               [ 8]  137 	add	hl, sp
      000070 4D               [ 4]  138 	ld	c, l
      000071 44               [ 4]  139 	ld	b, h
      000072 21 6A 01         [12]  140 	ld	hl, #362
      000075 39               [ 8]  141 	add	hl, sp
      000076 5D               [ 4]  142 	ld	e, l
      000077 54               [ 4]  143 	ld	d, h
      000078 CDr00r00         [24]  144 	call	_memcpy
                                    145 ;game_of_life.c:68: for (int i = 1; i < GOL_tiles_testWidth - 1; i++) {
      00007B 21 D3 02         [12]  146 	ld	hl, #723
      00007E 39               [ 8]  147 	add	hl, sp
      00007F 3E 01            [ 8]  148 	ld	a, #0x01
      000081 22               [ 8]  149 	ld	(hl+), a
      000082 AF               [ 4]  150 	xor	a, a
      000083 77               [ 8]  151 	ld	(hl), a
      000084                        152 00140$:
      000084 21 D3 02         [12]  153 	ld	hl, #723
      000087 39               [ 8]  154 	add	hl, sp
      000088 2A               [ 8]  155 	ld	a, (hl+)
      000089 D6 13            [ 8]  156 	sub	a, #0x13
      00008B 7E               [ 8]  157 	ld	a, (hl)
      00008C DE 00            [ 8]  158 	sbc	a, #0x00
      00008E 56               [ 8]  159 	ld	d, (hl)
      00008F 3E 00            [ 8]  160 	ld	a, #0x00
      000091 CB 7F            [ 8]  161 	bit	7,a
      000093 28 07            [12]  162 	jr	Z, 00287$
      000095 CB 7A            [ 8]  163 	bit	7, d
      000097 20 08            [12]  164 	jr	NZ, 00288$
      000099 BF               [ 4]  165 	cp	a, a
      00009A 18 05            [12]  166 	jr	00288$
      00009C                        167 00287$:
      00009C CB 7A            [ 8]  168 	bit	7, d
      00009E 28 01            [12]  169 	jr	Z, 00288$
      0000A0 37               [ 4]  170 	scf
      0000A1                        171 00288$:
      0000A1 D2r72r02         [16]  172 	jp	NC, 00129$
                                    173 ;game_of_life.c:69: for (int j = 1; j < GOL_tiles_testHeight - 1; j++) {
      0000A4 21 D5 02         [12]  174 	ld	hl, #725
      0000A7 39               [ 8]  175 	add	hl, sp
      0000A8 3E 01            [ 8]  176 	ld	a, #0x01
      0000AA 22               [ 8]  177 	ld	(hl+), a
      0000AB AF               [ 4]  178 	xor	a, a
      0000AC 77               [ 8]  179 	ld	(hl), a
      0000AD                        180 00137$:
      0000AD 21 D5 02         [12]  181 	ld	hl, #725
      0000B0 39               [ 8]  182 	add	hl, sp
      0000B1 2A               [ 8]  183 	ld	a, (hl+)
      0000B2 D6 11            [ 8]  184 	sub	a, #0x11
      0000B4 7E               [ 8]  185 	ld	a, (hl)
      0000B5 DE 00            [ 8]  186 	sbc	a, #0x00
      0000B7 56               [ 8]  187 	ld	d, (hl)
      0000B8 3E 00            [ 8]  188 	ld	a, #0x00
      0000BA CB 7F            [ 8]  189 	bit	7,a
      0000BC 28 07            [12]  190 	jr	Z, 00289$
      0000BE CB 7A            [ 8]  191 	bit	7, d
      0000C0 20 08            [12]  192 	jr	NZ, 00290$
      0000C2 BF               [ 4]  193 	cp	a, a
      0000C3 18 05            [12]  194 	jr	00290$
      0000C5                        195 00289$:
      0000C5 CB 7A            [ 8]  196 	bit	7, d
      0000C7 28 01            [12]  197 	jr	Z, 00290$
      0000C9 37               [ 4]  198 	scf
      0000CA                        199 00290$:
      0000CA D2r65r02         [16]  200 	jp	NC, 00141$
                                    201 ;game_of_life.c:71: int neighbours = 0;
      0000CD AF               [ 4]  202 	xor	a, a
      0000CE 21 D7 02         [12]  203 	ld	hl, #727
      0000D1 39               [ 8]  204 	add	hl, sp
      0000D2 22               [ 8]  205 	ld	(hl+), a
      0000D3 77               [ 8]  206 	ld	(hl), a
                                    207 ;game_of_life.c:73: if (get_bkg_tile_xy(i-1, j-1) == 13) {neighbours += 1;}
      0000D4 21 D5 02         [12]  208 	ld	hl, #725
      0000D7 39               [ 8]  209 	add	hl, sp
      0000D8 7E               [ 8]  210 	ld	a, (hl)
      0000D9 21 D0 02         [12]  211 	ld	hl, #720
      0000DC 39               [ 8]  212 	add	hl, sp
      0000DD 77               [ 8]  213 	ld	(hl), a
      0000DE 2A               [ 8]  214 	ld	a, (hl+)
      0000DF 23               [ 8]  215 	inc	hl
      0000E0 C6 FF            [ 8]  216 	add	a, #0xff
      0000E2 22               [ 8]  217 	ld	(hl+), a
      0000E3 3A               [ 8]  218 	ld	a, (hl-)
      0000E4 2B               [ 8]  219 	dec	hl
      0000E5 77               [ 8]  220 	ld	(hl), a
      0000E6 2A               [ 8]  221 	ld	a, (hl+)
      0000E7 47               [ 4]  222 	ld	b, a
      0000E8 05               [ 4]  223 	dec	b
      0000E9 7E               [ 8]  224 	ld	a, (hl)
      0000EA F5               [16]  225 	push	af
      0000EB 33               [ 8]  226 	inc	sp
      0000EC C5               [16]  227 	push	bc
      0000ED 33               [ 8]  228 	inc	sp
      0000EE CDr00r00         [24]  229 	call	_get_bkg_tile_xy
      0000F1 E1               [12]  230 	pop	hl
      0000F2 7B               [ 4]  231 	ld	a, e
      0000F3 D6 0D            [ 8]  232 	sub	a, #0x0d
      0000F5 20 09            [12]  233 	jr	NZ, 00103$
      0000F7 21 D7 02         [12]  234 	ld	hl, #727
      0000FA 39               [ 8]  235 	add	hl, sp
      0000FB 3E 01            [ 8]  236 	ld	a, #0x01
      0000FD 22               [ 8]  237 	ld	(hl+), a
      0000FE AF               [ 4]  238 	xor	a, a
      0000FF 77               [ 8]  239 	ld	(hl), a
      000100                        240 00103$:
                                    241 ;game_of_life.c:74: if (get_bkg_tile_xy(i+0, j-1) == 13) {neighbours += 1;}
      000100 21 D2 02         [12]  242 	ld	hl, #722
      000103 39               [ 8]  243 	add	hl, sp
      000104 3A               [ 8]  244 	ld	a, (hl-)
      000105 57               [ 4]  245 	ld	d, a
      000106 5E               [ 8]  246 	ld	e, (hl)
      000107 D5               [16]  247 	push	de
      000108 CDr00r00         [24]  248 	call	_get_bkg_tile_xy
      00010B E1               [12]  249 	pop	hl
      00010C 7B               [ 4]  250 	ld	a, e
      00010D D6 0D            [ 8]  251 	sub	a, #0x0d
      00010F 20 09            [12]  252 	jr	NZ, 00105$
      000111 21 D7 02         [12]  253 	ld	hl, #727
      000114 39               [ 8]  254 	add	hl, sp
      000115 34               [12]  255 	inc	(hl)
      000116 20 02            [12]  256 	jr	NZ, 00295$
      000118 23               [ 8]  257 	inc	hl
      000119 34               [12]  258 	inc	(hl)
      00011A                        259 00295$:
      00011A                        260 00105$:
                                    261 ;game_of_life.c:75: if (get_bkg_tile_xy(i+1, j-1) == 13) {neighbours += 1;}
      00011A 21 D1 02         [12]  262 	ld	hl, #721
      00011D 39               [ 8]  263 	add	hl, sp
      00011E 2A               [ 8]  264 	ld	a, (hl+)
      00011F 4F               [ 4]  265 	ld	c, a
      000120 0C               [ 4]  266 	inc	c
      000121 7E               [ 8]  267 	ld	a, (hl)
      000122 F5               [16]  268 	push	af
      000123 33               [ 8]  269 	inc	sp
      000124 79               [ 4]  270 	ld	a, c
      000125 F5               [16]  271 	push	af
      000126 33               [ 8]  272 	inc	sp
      000127 CDr00r00         [24]  273 	call	_get_bkg_tile_xy
      00012A E1               [12]  274 	pop	hl
      00012B 7B               [ 4]  275 	ld	a, e
      00012C D6 0D            [ 8]  276 	sub	a, #0x0d
      00012E 20 09            [12]  277 	jr	NZ, 00107$
      000130 21 D7 02         [12]  278 	ld	hl, #727
      000133 39               [ 8]  279 	add	hl, sp
      000134 34               [12]  280 	inc	(hl)
      000135 20 02            [12]  281 	jr	NZ, 00298$
      000137 23               [ 8]  282 	inc	hl
      000138 34               [12]  283 	inc	(hl)
      000139                        284 00298$:
      000139                        285 00107$:
                                    286 ;game_of_life.c:76: if (get_bkg_tile_xy(i-1, j+0) == 13) {neighbours += 1;}
      000139 21 D0 02         [12]  287 	ld	hl, #720
      00013C 39               [ 8]  288 	add	hl, sp
      00013D 7E               [ 8]  289 	ld	a, (hl)
      00013E F5               [16]  290 	push	af
      00013F 33               [ 8]  291 	inc	sp
      000140 C5               [16]  292 	push	bc
      000141 33               [ 8]  293 	inc	sp
      000142 CDr00r00         [24]  294 	call	_get_bkg_tile_xy
      000145 E1               [12]  295 	pop	hl
      000146 7B               [ 4]  296 	ld	a, e
      000147 D6 0D            [ 8]  297 	sub	a, #0x0d
      000149 20 09            [12]  298 	jr	NZ, 00109$
      00014B 21 D7 02         [12]  299 	ld	hl, #727
      00014E 39               [ 8]  300 	add	hl, sp
      00014F 34               [12]  301 	inc	(hl)
      000150 20 02            [12]  302 	jr	NZ, 00301$
      000152 23               [ 8]  303 	inc	hl
      000153 34               [12]  304 	inc	(hl)
      000154                        305 00301$:
      000154                        306 00109$:
                                    307 ;game_of_life.c:78: if (get_bkg_tile_xy(i+1, j+0) == 13) {neighbours += 1;}
      000154 21 D0 02         [12]  308 	ld	hl, #720
      000157 39               [ 8]  309 	add	hl, sp
      000158 7E               [ 8]  310 	ld	a, (hl)
      000159 F5               [16]  311 	push	af
      00015A 33               [ 8]  312 	inc	sp
      00015B 79               [ 4]  313 	ld	a, c
      00015C F5               [16]  314 	push	af
      00015D 33               [ 8]  315 	inc	sp
      00015E CDr00r00         [24]  316 	call	_get_bkg_tile_xy
      000161 E1               [12]  317 	pop	hl
      000162 7B               [ 4]  318 	ld	a, e
      000163 D6 0D            [ 8]  319 	sub	a, #0x0d
      000165 20 09            [12]  320 	jr	NZ, 00111$
      000167 21 D7 02         [12]  321 	ld	hl, #727
      00016A 39               [ 8]  322 	add	hl, sp
      00016B 34               [12]  323 	inc	(hl)
      00016C 20 02            [12]  324 	jr	NZ, 00304$
      00016E 23               [ 8]  325 	inc	hl
      00016F 34               [12]  326 	inc	(hl)
      000170                        327 00304$:
      000170                        328 00111$:
                                    329 ;game_of_life.c:79: if (get_bkg_tile_xy(i-1, j+1) == 13) {neighbours += 1;}
      000170 21 D0 02         [12]  330 	ld	hl, #720
      000173 39               [ 8]  331 	add	hl, sp
      000174 56               [ 8]  332 	ld	d, (hl)
      000175 14               [ 4]  333 	inc	d
      000176 D5               [16]  334 	push	de
      000177 58               [ 4]  335 	ld	e, b
      000178 D5               [16]  336 	push	de
      000179 CDr00r00         [24]  337 	call	_get_bkg_tile_xy
      00017C E1               [12]  338 	pop	hl
      00017D 7B               [ 4]  339 	ld	a, e
      00017E D1               [12]  340 	pop	de
      00017F D6 0D            [ 8]  341 	sub	a, #0x0d
      000181 20 09            [12]  342 	jr	NZ, 00113$
      000183 21 D7 02         [12]  343 	ld	hl, #727
      000186 39               [ 8]  344 	add	hl, sp
      000187 34               [12]  345 	inc	(hl)
      000188 20 02            [12]  346 	jr	NZ, 00307$
      00018A 23               [ 8]  347 	inc	hl
      00018B 34               [12]  348 	inc	(hl)
      00018C                        349 00307$:
      00018C                        350 00113$:
                                    351 ;game_of_life.c:80: if (get_bkg_tile_xy(i+0, j+1) == 13) {neighbours += 1;}
      00018C D5               [16]  352 	push	de
      00018D D5               [16]  353 	push	de
      00018E 33               [ 8]  354 	inc	sp
      00018F 21 D4 02         [12]  355 	ld	hl, #724
      000192 39               [ 8]  356 	add	hl, sp
      000193 7E               [ 8]  357 	ld	a, (hl)
      000194 F5               [16]  358 	push	af
      000195 33               [ 8]  359 	inc	sp
      000196 CDr00r00         [24]  360 	call	_get_bkg_tile_xy
      000199 E1               [12]  361 	pop	hl
      00019A 7B               [ 4]  362 	ld	a, e
      00019B D1               [12]  363 	pop	de
      00019C D6 0D            [ 8]  364 	sub	a, #0x0d
      00019E 20 09            [12]  365 	jr	NZ, 00115$
      0001A0 21 D7 02         [12]  366 	ld	hl, #727
      0001A3 39               [ 8]  367 	add	hl, sp
      0001A4 34               [12]  368 	inc	(hl)
      0001A5 20 02            [12]  369 	jr	NZ, 00310$
      0001A7 23               [ 8]  370 	inc	hl
      0001A8 34               [12]  371 	inc	(hl)
      0001A9                        372 00310$:
      0001A9                        373 00115$:
                                    374 ;game_of_life.c:81: if (get_bkg_tile_xy(i+1, j+1) == 13) {neighbours += 1;}
      0001A9 59               [ 4]  375 	ld	e, c
      0001AA D5               [16]  376 	push	de
      0001AB CDr00r00         [24]  377 	call	_get_bkg_tile_xy
      0001AE E1               [12]  378 	pop	hl
      0001AF 7B               [ 4]  379 	ld	a, e
      0001B0 D6 0D            [ 8]  380 	sub	a, #0x0d
      0001B2 20 09            [12]  381 	jr	NZ, 00117$
      0001B4 21 D7 02         [12]  382 	ld	hl, #727
      0001B7 39               [ 8]  383 	add	hl, sp
      0001B8 34               [12]  384 	inc	(hl)
      0001B9 20 02            [12]  385 	jr	NZ, 00313$
      0001BB 23               [ 8]  386 	inc	hl
      0001BC 34               [12]  387 	inc	(hl)
      0001BD                        388 00313$:
      0001BD                        389 00117$:
                                    390 ;game_of_life.c:84: if (get_bkg_tile_xy(i+0, j+0) == 13) {
      0001BD 21 D0 02         [12]  391 	ld	hl, #720
      0001C0 39               [ 8]  392 	add	hl, sp
      0001C1 2A               [ 8]  393 	ld	a, (hl+)
      0001C2 57               [ 4]  394 	ld	d, a
      0001C3 5E               [ 8]  395 	ld	e, (hl)
      0001C4 D5               [16]  396 	push	de
      0001C5 CDr00r00         [24]  397 	call	_get_bkg_tile_xy
      0001C8 E1               [12]  398 	pop	hl
      0001C9 21 D2 02         [12]  399 	ld	hl, #722
      0001CC 39               [ 8]  400 	add	hl, sp
      0001CD 73               [ 8]  401 	ld	(hl), e
                                    402 ;game_of_life.c:86: if (neighbours < 2) {GOL_tiles_test_copy[i+GOL_tiles_testWidth*j] = 0;}
      0001CE 21 D5 02         [12]  403 	ld	hl,#0x2d5
      0001D1 39               [ 8]  404 	add	hl,sp
      0001D2 2A               [ 8]  405 	ld	a, (hl+)
      0001D3 4F               [ 4]  406 	ld	c, a
      0001D4 46               [ 8]  407 	ld	b, (hl)
      0001D5 69               [ 4]  408 	ld	l, c
      0001D6 60               [ 4]  409 	ld	h, b
      0001D7 29               [ 8]  410 	add	hl, hl
      0001D8 29               [ 8]  411 	add	hl, hl
      0001D9 09               [ 8]  412 	add	hl, bc
      0001DA 29               [ 8]  413 	add	hl, hl
      0001DB 29               [ 8]  414 	add	hl, hl
      0001DC 4D               [ 4]  415 	ld	c, l
      0001DD 44               [ 4]  416 	ld	b, h
      0001DE 21 D3 02         [12]  417 	ld	hl, #723
      0001E1 39               [ 8]  418 	add	hl, sp
      0001E2 2A               [ 8]  419 	ld	a,	(hl+)
      0001E3 66               [ 8]  420 	ld	h, (hl)
      0001E4 6F               [ 4]  421 	ld	l, a
      0001E5 09               [ 8]  422 	add	hl, bc
      0001E6 4D               [ 4]  423 	ld	c, l
      0001E7 44               [ 4]  424 	ld	b, h
      0001E8 21 68 01         [12]  425 	ld	hl, #360
      0001EB 39               [ 8]  426 	add	hl, sp
      0001EC 09               [ 8]  427 	add	hl, bc
      0001ED 4D               [ 4]  428 	ld	c, l
      0001EE 44               [ 4]  429 	ld	b, h
                                    430 ;game_of_life.c:84: if (get_bkg_tile_xy(i+0, j+0) == 13) {
      0001EF 21 D2 02         [12]  431 	ld	hl, #722
      0001F2 39               [ 8]  432 	add	hl, sp
      0001F3 7E               [ 8]  433 	ld	a, (hl)
      0001F4 D6 0D            [ 8]  434 	sub	a, #0x0d
      0001F6 20 43            [12]  435 	jr	NZ, 00123$
                                    436 ;game_of_life.c:86: if (neighbours < 2) {GOL_tiles_test_copy[i+GOL_tiles_testWidth*j] = 0;}
      0001F8 21 D7 02         [12]  437 	ld	hl, #727
      0001FB 39               [ 8]  438 	add	hl, sp
      0001FC 2A               [ 8]  439 	ld	a, (hl+)
      0001FD D6 02            [ 8]  440 	sub	a, #0x02
      0001FF 7E               [ 8]  441 	ld	a, (hl)
      000200 DE 00            [ 8]  442 	sbc	a, #0x00
      000202 56               [ 8]  443 	ld	d, (hl)
      000203 3E 00            [ 8]  444 	ld	a, #0x00
      000205 CB 7F            [ 8]  445 	bit	7,a
      000207 28 07            [12]  446 	jr	Z, 00316$
      000209 CB 7A            [ 8]  447 	bit	7, d
      00020B 20 08            [12]  448 	jr	NZ, 00317$
      00020D BF               [ 4]  449 	cp	a, a
      00020E 18 05            [12]  450 	jr	00317$
      000210                        451 00316$:
      000210 CB 7A            [ 8]  452 	bit	7, d
      000212 28 01            [12]  453 	jr	Z, 00317$
      000214 37               [ 4]  454 	scf
      000215                        455 00317$:
      000215 30 02            [12]  456 	jr	NC, 00119$
      000217 AF               [ 4]  457 	xor	a, a
      000218 02               [ 8]  458 	ld	(bc), a
      000219                        459 00119$:
                                    460 ;game_of_life.c:90: if (neighbours > 3) {GOL_tiles_test_copy[i+GOL_tiles_testWidth*j] = 0;}
      000219 21 D7 02         [12]  461 	ld	hl, #727
      00021C 39               [ 8]  462 	add	hl, sp
      00021D 3E 03            [ 8]  463 	ld	a, #0x03
      00021F 96               [ 8]  464 	sub	a, (hl)
      000220 23               [ 8]  465 	inc	hl
      000221 3E 00            [ 8]  466 	ld	a, #0x00
      000223 9E               [ 8]  467 	sbc	a, (hl)
      000224 3E 00            [ 8]  468 	ld	a, #0x00
      000226 57               [ 4]  469 	ld	d, a
      000227 CB 7E            [12]  470 	bit	7, (hl)
      000229 28 07            [12]  471 	jr	Z, 00318$
      00022B CB 7A            [ 8]  472 	bit	7, d
      00022D 20 08            [12]  473 	jr	NZ, 00319$
      00022F BF               [ 4]  474 	cp	a, a
      000230 18 05            [12]  475 	jr	00319$
      000232                        476 00318$:
      000232 CB 7A            [ 8]  477 	bit	7, d
      000234 28 01            [12]  478 	jr	Z, 00319$
      000236 37               [ 4]  479 	scf
      000237                        480 00319$:
      000237 30 02            [12]  481 	jr	NC, 00123$
      000239 AF               [ 4]  482 	xor	a, a
      00023A 02               [ 8]  483 	ld	(bc), a
      00023B                        484 00123$:
                                    485 ;game_of_life.c:92: if (get_bkg_tile_xy(i+0, j+0) == 0) {
      00023B 21 D0 02         [12]  486 	ld	hl, #720
      00023E 39               [ 8]  487 	add	hl, sp
      00023F 2A               [ 8]  488 	ld	a, (hl+)
      000240 57               [ 4]  489 	ld	d, a
      000241 5E               [ 8]  490 	ld	e, (hl)
      000242 D5               [16]  491 	push	de
      000243 CDr00r00         [24]  492 	call	_get_bkg_tile_xy
      000246 E1               [12]  493 	pop	hl
      000247 7B               [ 4]  494 	ld	a, e
      000248 B7               [ 4]  495 	or	a, a
      000249 20 0D            [12]  496 	jr	NZ, 00138$
                                    497 ;game_of_life.c:94: if (neighbours == 3) {GOL_tiles_test_copy[i+GOL_tiles_testWidth*j] = 13;}
      00024B 21 D7 02         [12]  498 	ld	hl, #727
      00024E 39               [ 8]  499 	add	hl, sp
      00024F 2A               [ 8]  500 	ld	a, (hl+)
      000250 D6 03            [ 8]  501 	sub	a, #0x03
      000252 B6               [ 8]  502 	or	a, (hl)
      000253 20 03            [12]  503 	jr	NZ, 00138$
      000255 3E 0D            [ 8]  504 	ld	a, #0x0d
      000257 02               [ 8]  505 	ld	(bc), a
      000258                        506 00138$:
                                    507 ;game_of_life.c:69: for (int j = 1; j < GOL_tiles_testHeight - 1; j++) {
      000258 21 D5 02         [12]  508 	ld	hl, #725
      00025B 39               [ 8]  509 	add	hl, sp
      00025C 34               [12]  510 	inc	(hl)
      00025D C2rADr00         [16]  511 	jp	NZ,00137$
      000260 23               [ 8]  512 	inc	hl
      000261 34               [12]  513 	inc	(hl)
      000262 C3rADr00         [16]  514 	jp	00137$
      000265                        515 00141$:
                                    516 ;game_of_life.c:68: for (int i = 1; i < GOL_tiles_testWidth - 1; i++) {
      000265 21 D3 02         [12]  517 	ld	hl, #723
      000268 39               [ 8]  518 	add	hl, sp
      000269 34               [12]  519 	inc	(hl)
      00026A C2r84r00         [16]  520 	jp	NZ,00140$
      00026D 23               [ 8]  521 	inc	hl
      00026E 34               [12]  522 	inc	(hl)
      00026F C3r84r00         [16]  523 	jp	00140$
      000272                        524 00129$:
                                    525 ;game_of_life.c:99: memcpy(GOL_tiles_test, GOL_tiles_test_copy, sizeof(GOL_tiles_test_copy));
      000272 11 68 01         [12]  526 	ld	de, #0x0168
      000275 D5               [16]  527 	push	de
      000276 21 6A 01         [12]  528 	ld	hl, #362
      000279 39               [ 8]  529 	add	hl, sp
      00027A 4D               [ 4]  530 	ld	c, l
      00027B 44               [ 4]  531 	ld	b, h
      00027C 21 02 00         [12]  532 	ld	hl, #2
      00027F 39               [ 8]  533 	add	hl, sp
      000280 5D               [ 4]  534 	ld	e, l
      000281 54               [ 4]  535 	ld	d, h
      000282 CDr00r00         [24]  536 	call	_memcpy
                                    537 ;game_of_life.c:101: set_bkg_tiles(0, 0, 20, 18, GOL_tiles_test);
      000285 21 00 00         [12]  538 	ld	hl, #0
      000288 39               [ 8]  539 	add	hl, sp
      000289 E5               [16]  540 	push	hl
      00028A 21 14 12         [12]  541 	ld	hl, #0x1214
      00028D E5               [16]  542 	push	hl
      00028E AF               [ 4]  543 	xor	a, a
      00028F 0F               [ 4]  544 	rrca
      000290 F5               [16]  545 	push	af
      000291 CDr00r00         [24]  546 	call	_set_bkg_tiles
      000294 E8 06            [16]  547 	add	sp, #6
      000296 C3r68r00         [16]  548 	jp	00131$
                                    549 ;game_of_life.c:133: }
      000299 21 D9 02         [12]  550 	ld	hl, #729
      00029C 39               [ 8]  551 	add	hl, sp
      00029D F9               [ 8]  552 	ld	sp, hl
      00029E C9               [16]  553 	ret
                                    554 	.area _CODE
                                    555 	.area _INITIALIZER
      000000                        556 __xinit__GOL_4by4:
      000000 00                     557 	.db #0x00	; 0
      000001 00                     558 	.db #0x00	; 0
      000002 00                     559 	.db #0x00	; 0
      000003 00                     560 	.db #0x00	; 0
      000004 00                     561 	.db #0x00	; 0
      000005 00                     562 	.db #0x00	; 0
      000006 00                     563 	.db #0x00	; 0
      000007 00                     564 	.db #0x00	; 0
      000008 00                     565 	.db #0x00	; 0
      000009 00                     566 	.db #0x00	; 0
      00000A 00                     567 	.db #0x00	; 0
      00000B 00                     568 	.db #0x00	; 0
      00000C 00                     569 	.db #0x00	; 0
      00000D 00                     570 	.db #0x00	; 0
      00000E 00                     571 	.db #0x00	; 0
      00000F 00                     572 	.db #0x00	; 0
      000010 F0                     573 	.db #0xf0	; 240
      000011 F0                     574 	.db #0xf0	; 240
      000012 F0                     575 	.db #0xf0	; 240
      000013 F0                     576 	.db #0xf0	; 240
      000014 F0                     577 	.db #0xf0	; 240
      000015 F0                     578 	.db #0xf0	; 240
      000016 F0                     579 	.db #0xf0	; 240
      000017 F0                     580 	.db #0xf0	; 240
      000018 00                     581 	.db #0x00	; 0
      000019 00                     582 	.db #0x00	; 0
      00001A 00                     583 	.db #0x00	; 0
      00001B 00                     584 	.db #0x00	; 0
      00001C 00                     585 	.db #0x00	; 0
      00001D 00                     586 	.db #0x00	; 0
      00001E 00                     587 	.db #0x00	; 0
      00001F 00                     588 	.db #0x00	; 0
      000020 0F                     589 	.db #0x0f	; 15
      000021 0F                     590 	.db #0x0f	; 15
      000022 0F                     591 	.db #0x0f	; 15
      000023 0F                     592 	.db #0x0f	; 15
      000024 0F                     593 	.db #0x0f	; 15
      000025 0F                     594 	.db #0x0f	; 15
      000026 0F                     595 	.db #0x0f	; 15
      000027 0F                     596 	.db #0x0f	; 15
      000028 00                     597 	.db #0x00	; 0
      000029 00                     598 	.db #0x00	; 0
      00002A 00                     599 	.db #0x00	; 0
      00002B 00                     600 	.db #0x00	; 0
      00002C 00                     601 	.db #0x00	; 0
      00002D 00                     602 	.db #0x00	; 0
      00002E 00                     603 	.db #0x00	; 0
      00002F 00                     604 	.db #0x00	; 0
      000030 00                     605 	.db #0x00	; 0
      000031 00                     606 	.db #0x00	; 0
      000032 00                     607 	.db #0x00	; 0
      000033 00                     608 	.db #0x00	; 0
      000034 00                     609 	.db #0x00	; 0
      000035 00                     610 	.db #0x00	; 0
      000036 00                     611 	.db #0x00	; 0
      000037 00                     612 	.db #0x00	; 0
      000038 0F                     613 	.db #0x0f	; 15
      000039 0F                     614 	.db #0x0f	; 15
      00003A 0F                     615 	.db #0x0f	; 15
      00003B 0F                     616 	.db #0x0f	; 15
      00003C 0F                     617 	.db #0x0f	; 15
      00003D 0F                     618 	.db #0x0f	; 15
      00003E 0F                     619 	.db #0x0f	; 15
      00003F 0F                     620 	.db #0x0f	; 15
      000040 00                     621 	.db #0x00	; 0
      000041 00                     622 	.db #0x00	; 0
      000042 00                     623 	.db #0x00	; 0
      000043 00                     624 	.db #0x00	; 0
      000044 00                     625 	.db #0x00	; 0
      000045 00                     626 	.db #0x00	; 0
      000046 00                     627 	.db #0x00	; 0
      000047 00                     628 	.db #0x00	; 0
      000048 F0                     629 	.db #0xf0	; 240
      000049 F0                     630 	.db #0xf0	; 240
      00004A F0                     631 	.db #0xf0	; 240
      00004B F0                     632 	.db #0xf0	; 240
      00004C F0                     633 	.db #0xf0	; 240
      00004D F0                     634 	.db #0xf0	; 240
      00004E F0                     635 	.db #0xf0	; 240
      00004F F0                     636 	.db #0xf0	; 240
      000050 FF                     637 	.db #0xff	; 255
      000051 FF                     638 	.db #0xff	; 255
      000052 FF                     639 	.db #0xff	; 255
      000053 FF                     640 	.db #0xff	; 255
      000054 FF                     641 	.db #0xff	; 255
      000055 FF                     642 	.db #0xff	; 255
      000056 FF                     643 	.db #0xff	; 255
      000057 FF                     644 	.db #0xff	; 255
      000058 00                     645 	.db #0x00	; 0
      000059 00                     646 	.db #0x00	; 0
      00005A 00                     647 	.db #0x00	; 0
      00005B 00                     648 	.db #0x00	; 0
      00005C 00                     649 	.db #0x00	; 0
      00005D 00                     650 	.db #0x00	; 0
      00005E 00                     651 	.db #0x00	; 0
      00005F 00                     652 	.db #0x00	; 0
      000060 0F                     653 	.db #0x0f	; 15
      000061 0F                     654 	.db #0x0f	; 15
      000062 0F                     655 	.db #0x0f	; 15
      000063 0F                     656 	.db #0x0f	; 15
      000064 0F                     657 	.db #0x0f	; 15
      000065 0F                     658 	.db #0x0f	; 15
      000066 0F                     659 	.db #0x0f	; 15
      000067 0F                     660 	.db #0x0f	; 15
      000068 0F                     661 	.db #0x0f	; 15
      000069 0F                     662 	.db #0x0f	; 15
      00006A 0F                     663 	.db #0x0f	; 15
      00006B 0F                     664 	.db #0x0f	; 15
      00006C 0F                     665 	.db #0x0f	; 15
      00006D 0F                     666 	.db #0x0f	; 15
      00006E 0F                     667 	.db #0x0f	; 15
      00006F 0F                     668 	.db #0x0f	; 15
      000070 00                     669 	.db #0x00	; 0
      000071 00                     670 	.db #0x00	; 0
      000072 00                     671 	.db #0x00	; 0
      000073 00                     672 	.db #0x00	; 0
      000074 00                     673 	.db #0x00	; 0
      000075 00                     674 	.db #0x00	; 0
      000076 00                     675 	.db #0x00	; 0
      000077 00                     676 	.db #0x00	; 0
      000078 FF                     677 	.db #0xff	; 255
      000079 FF                     678 	.db #0xff	; 255
      00007A FF                     679 	.db #0xff	; 255
      00007B FF                     680 	.db #0xff	; 255
      00007C FF                     681 	.db #0xff	; 255
      00007D FF                     682 	.db #0xff	; 255
      00007E FF                     683 	.db #0xff	; 255
      00007F FF                     684 	.db #0xff	; 255
      000080 F0                     685 	.db #0xf0	; 240
      000081 F0                     686 	.db #0xf0	; 240
      000082 F0                     687 	.db #0xf0	; 240
      000083 F0                     688 	.db #0xf0	; 240
      000084 F0                     689 	.db #0xf0	; 240
      000085 F0                     690 	.db #0xf0	; 240
      000086 F0                     691 	.db #0xf0	; 240
      000087 F0                     692 	.db #0xf0	; 240
      000088 F0                     693 	.db #0xf0	; 240
      000089 F0                     694 	.db #0xf0	; 240
      00008A F0                     695 	.db #0xf0	; 240
      00008B F0                     696 	.db #0xf0	; 240
      00008C F0                     697 	.db #0xf0	; 240
      00008D F0                     698 	.db #0xf0	; 240
      00008E F0                     699 	.db #0xf0	; 240
      00008F F0                     700 	.db #0xf0	; 240
      000090 FF                     701 	.db #0xff	; 255
      000091 FF                     702 	.db #0xff	; 255
      000092 FF                     703 	.db #0xff	; 255
      000093 FF                     704 	.db #0xff	; 255
      000094 FF                     705 	.db #0xff	; 255
      000095 FF                     706 	.db #0xff	; 255
      000096 FF                     707 	.db #0xff	; 255
      000097 FF                     708 	.db #0xff	; 255
      000098 0F                     709 	.db #0x0f	; 15
      000099 0F                     710 	.db #0x0f	; 15
      00009A 0F                     711 	.db #0x0f	; 15
      00009B 0F                     712 	.db #0x0f	; 15
      00009C 0F                     713 	.db #0x0f	; 15
      00009D 0F                     714 	.db #0x0f	; 15
      00009E 0F                     715 	.db #0x0f	; 15
      00009F 0F                     716 	.db #0x0f	; 15
      0000A0 0F                     717 	.db #0x0f	; 15
      0000A1 0F                     718 	.db #0x0f	; 15
      0000A2 0F                     719 	.db #0x0f	; 15
      0000A3 0F                     720 	.db #0x0f	; 15
      0000A4 0F                     721 	.db #0x0f	; 15
      0000A5 0F                     722 	.db #0x0f	; 15
      0000A6 0F                     723 	.db #0x0f	; 15
      0000A7 0F                     724 	.db #0x0f	; 15
      0000A8 FF                     725 	.db #0xff	; 255
      0000A9 FF                     726 	.db #0xff	; 255
      0000AA FF                     727 	.db #0xff	; 255
      0000AB FF                     728 	.db #0xff	; 255
      0000AC FF                     729 	.db #0xff	; 255
      0000AD FF                     730 	.db #0xff	; 255
      0000AE FF                     731 	.db #0xff	; 255
      0000AF FF                     732 	.db #0xff	; 255
      0000B0 F0                     733 	.db #0xf0	; 240
      0000B1 F0                     734 	.db #0xf0	; 240
      0000B2 F0                     735 	.db #0xf0	; 240
      0000B3 F0                     736 	.db #0xf0	; 240
      0000B4 F0                     737 	.db #0xf0	; 240
      0000B5 F0                     738 	.db #0xf0	; 240
      0000B6 F0                     739 	.db #0xf0	; 240
      0000B7 F0                     740 	.db #0xf0	; 240
      0000B8 FF                     741 	.db #0xff	; 255
      0000B9 FF                     742 	.db #0xff	; 255
      0000BA FF                     743 	.db #0xff	; 255
      0000BB FF                     744 	.db #0xff	; 255
      0000BC FF                     745 	.db #0xff	; 255
      0000BD FF                     746 	.db #0xff	; 255
      0000BE FF                     747 	.db #0xff	; 255
      0000BF FF                     748 	.db #0xff	; 255
      0000C0 FF                     749 	.db #0xff	; 255
      0000C1 FF                     750 	.db #0xff	; 255
      0000C2 FF                     751 	.db #0xff	; 255
      0000C3 FF                     752 	.db #0xff	; 255
      0000C4 FF                     753 	.db #0xff	; 255
      0000C5 FF                     754 	.db #0xff	; 255
      0000C6 FF                     755 	.db #0xff	; 255
      0000C7 FF                     756 	.db #0xff	; 255
      0000C8 F0                     757 	.db #0xf0	; 240
      0000C9 F0                     758 	.db #0xf0	; 240
      0000CA F0                     759 	.db #0xf0	; 240
      0000CB F0                     760 	.db #0xf0	; 240
      0000CC F0                     761 	.db #0xf0	; 240
      0000CD F0                     762 	.db #0xf0	; 240
      0000CE F0                     763 	.db #0xf0	; 240
      0000CF F0                     764 	.db #0xf0	; 240
      0000D0 FF                     765 	.db #0xff	; 255
      0000D1 FF                     766 	.db #0xff	; 255
      0000D2 FF                     767 	.db #0xff	; 255
      0000D3 FF                     768 	.db #0xff	; 255
      0000D4 FF                     769 	.db #0xff	; 255
      0000D5 FF                     770 	.db #0xff	; 255
      0000D6 FF                     771 	.db #0xff	; 255
      0000D7 FF                     772 	.db #0xff	; 255
      0000D8 FF                     773 	.db #0xff	; 255
      0000D9 FF                     774 	.db #0xff	; 255
      0000DA FF                     775 	.db #0xff	; 255
      0000DB FF                     776 	.db #0xff	; 255
      0000DC FF                     777 	.db #0xff	; 255
      0000DD FF                     778 	.db #0xff	; 255
      0000DE FF                     779 	.db #0xff	; 255
      0000DF FF                     780 	.db #0xff	; 255
                                    781 	.area _CABS (ABS)
